@import "./import";
@import "./mixin";
@import "./vars";

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  outline: none !important;
  font-family: Poppins;
  text-decoration: none;
}

html {
  scroll-behavior: smooth;
}

::-webkit-scrollbar {
  width: 5px;
}
::-webkit-scrollbar-track {
  background: none;
}
::-webkit-scrollbar-thumb {
  background: $themeColor;
}

a,
button {
  user-select: none !important;
}

button * {
  text-transform: capitalize !important;
  font-family: $font !important;
}

body {
  background: $bgColor;
  color: #fff;
  overflow-x: hidden !important;
}

h1,
h2 {
  font-weight: 100;
}

.container {
  width: 1000px;
  margin: auto;
}

// the nav bar over the whole application
nav {
  @include flex(space-around, center, stretch);
  min-height: 10vh;
  padding: 3px 0px;
  background: $bgColor;
  position: sticky;
  top: 0;
  left: 0;
  z-index: 10;
  border-bottom: 1px solid $bgSecondary;

  h2 {
    font-weight: 100;
    a {
      color: $themeColor;
      font-family: $font;
    }
  }

  .navLinks {
    @include flex(space-around, center, stretch);
    li {
      list-style: none;
      margin: 0px 10px;
      a {
        color: #fff;
        letter-spacing: 0.5px;
      }

      .icon {
        color: #fff;
      }
    }
  }

  .bars {
    display: none;
  }

  .nav_active {
    color: $themeColor !important;
  }
}

// the edit product modal
.edit_product_modal {
  width: 100vw;
  height: 100vh;
  position: fixed;
  top: 0;
  left: 0;
  @include flex(center, center, stretch);
  background: #0d12194b;
  backdrop-filter: blur(5px);
  z-index: 100;
  padding: 100px 0 50px 0;
  overflow-x: hidden;
  .close_modal_button_container {
    position: fixed;
    top: 0;
    left: 0;
    button {
      color: $warningColor;
      margin: 10px;
    }
  }

  .model_content_box {
    width: 100%;
    background: $bgSecondary;
    padding: 30px 10px;
    box-shadow: 0 0 5px $themeColor;
    border-radius: 3px;
    .modal_title {
      text-align: center;
      color: $themeColor;
      margin-bottom: 30px;
      font-family: $font;
    }
    .form_container {
      .single_field {
        width: 95%;
        margin: 10px auto;
        input,
        select,
        textarea,
        button {
          width: 100%;
          padding: 10px;
          resize: vertical;
        }
        input,
        select,
        textarea {
          border: 2px solid #fff;
          border-radius: 3px;
          &:focus {
            border-color: $themeColor;
          }
        }
        button {
          background: $themeColor;
          color: #fff;
        }

        .image_container {
          @include flex(center, center, stretch);
          .single_image {
            width: 300px;
            height: 300px;
            margin: 5px;
            border-radius: 3px;
            position: relative;
            .remove_button {
              position: absolute;
              top: 0;
              left: 0;
              button {
                color: $themeColor;
                background: none;
              }
            }
          }
        }

        .no_image {
          text-align: center;
          padding: 20px 0;
          h2 {
            font-family: $font;
            color: #aeb1b4;
          }
        }
      }
    }
  }
}

// the not found page
.not_found_page {
  display: grid;
  place-items: center;
  padding: 50px 0px;
  .not_found_content {
    @include flex(center, center, column);
    .not_found_img {
      min-width: 250px;
      width: 200px;
      max-width: 100%;
      margin-bottom: 20px;
      img {
        width: 100%;
      }
    }

    .not_found_desc {
      text-align: center;
      h2 {
        color: $themeColor;
        margin-bottom: 5px;
      }
      p {
        margin-bottom: 10px;
        color: #ff1000;
        letter-spacing: 0.5px;
      }
      button {
        background: $themeColor;
        color: #fff;
        padding: 6px 20px;
      }
    }
  }
}

// the full page loader
.full_page_loader {
  min-height: 80vh;
  display: grid;
  place-items: center;
  padding: 50px 0px;

  .boxes {
    --size: 32px;

    margin: auto;
    --duration: 800ms;
    height: calc(var(--size) * 2);
    width: calc(var(--size) * 3);
    position: relative;
    transform-style: preserve-3d;
    transform-origin: 50% 50%;
    margin-top: calc(var(--size) * 1.5 * -1);
    transform: rotateX(60deg) rotateZ(45deg) rotateY(0deg) translateZ(0px);
    .box {
      width: var(--size);
      height: var(--size);
      top: 0;
      left: 0;
      position: absolute;
      transform-style: preserve-3d;
      &:nth-child(1) {
        transform: translate(100%, 0);
        animation: box1 var(--duration) linear infinite;
      }
      &:nth-child(2) {
        transform: translate(0, 100%);
        animation: box2 var(--duration) linear infinite;
      }
      &:nth-child(3) {
        transform: translate(100%, 100%);
        animation: box3 var(--duration) linear infinite;
      }
      &:nth-child(4) {
        transform: translate(200%, 0);
        animation: box4 var(--duration) linear infinite;
      }
      & > div {
        --background: #{$color};
        --top: auto;
        --right: auto;
        --bottom: auto;
        --left: auto;
        --translateZ: calc(var(--size) / 2);
        --rotateY: 0deg;
        --rotateX: 0deg;
        position: absolute;
        width: 100%;
        height: 100%;
        background: var(--background);
        top: var(--top);
        right: var(--right);
        bottom: var(--bottom);
        left: var(--left);
        transform: rotateY(var(--rotateY)) rotateX(var(--rotateX))
          translateZ(var(--translateZ));
        &:nth-child(1) {
          --top: 0;
          --left: 0;
        }
        &:nth-child(2) {
          --background: #{$colorRight};
          --right: 0;
          --rotateY: 90deg;
        }
        &:nth-child(3) {
          --background: #{$colorLeft};
          --rotateX: -90deg;
        }
        &:nth-child(4) {
          --background: #{$shadow};
          --top: 0;
          --left: 0;
          --translateZ: calc(var(--size) * 3 * -1);
        }
      }
    }
  }

  @keyframes box1 {
    0%,
    50% {
      transform: translate(100%, 0);
    }
    100% {
      transform: translate(200%, 0);
    }
  }

  @keyframes box2 {
    0% {
      transform: translate(0, 100%);
    }
    50% {
      transform: translate(0, 0);
    }
    100% {
      transform: translate(100%, 0);
    }
  }

  @keyframes box3 {
    0%,
    50% {
      transform: translate(100%, 100%);
    }
    100% {
      transform: translate(0, 100%);
    }
  }

  @keyframes box4 {
    0% {
      transform: translate(200%, 0);
    }
    50% {
      transform: translate(200%, 100%);
    }
    100% {
      transform: translate(100%, 100%);
    }
  }

  * {
    box-sizing: border-box;
    &:before,
    &:after {
      box-sizing: border-box;
    }
  }
}

// the inline css loader
.inline_loader {
  display: inline-block;
  margin: 10px;
  width: 50px;
  height: 50px;

  .loader {
    --path: #1a2634;
    --dot: #7976fc;
    --duration: 3s;
    width: 100%;
    height: 100%;
    position: relative;
    &:before {
      content: "";
      width: 6px;
      height: 6px;
      border-radius: 50%;
      position: absolute;
      display: block;
      background: var(--dot);
      top: 37px;
      left: 19px;
      transform: translate(-18px, -18px);
      animation: dotRect var(--duration) cubic-bezier(0.785, 0.135, 0.15, 0.86)
        infinite;
    }
    svg {
      display: block;
      width: 100%;
      height: 100%;
      rect,
      polygon,
      circle {
        fill: none;
        stroke: var(--path);
        stroke-width: 10px;
        stroke-linejoin: round;
        stroke-linecap: round;
      }
      polygon {
        stroke-dasharray: 145 (221 - 145) 145 (221 - 145);
        stroke-dashoffset: 0;
        animation: pathTriangle var(--duration)
          cubic-bezier(0.785, 0.135, 0.15, 0.86) infinite;
      }
      rect {
        stroke-dasharray: (256 / 4 * 3) (256 / 4) (256 / 4 * 3) (256 / 4);
        stroke-dashoffset: 0;
        animation: pathRect 3s cubic-bezier(0.785, 0.135, 0.15, 0.86) infinite;
      }
      circle {
        stroke-dasharray: (200 / 4 * 3) (200 / 4) (200 / 4 * 3) (200 / 4);
        stroke-dashoffset: 75;
        animation: pathCircle var(--duration)
          cubic-bezier(0.785, 0.135, 0.15, 0.86) infinite;
      }
    }
  }

  @keyframes dotRect {
    25% {
      transform: translate(0, 0);
    }
    50% {
      transform: translate(18px, -18px);
    }
    75% {
      transform: translate(0, -36px);
    }
    100% {
      transform: translate(-18px, -18px);
    }
  }

  @keyframes pathCircle {
    25% {
      stroke-dashoffset: 125;
    }
    50% {
      stroke-dashoffset: 175;
    }
    75% {
      stroke-dashoffset: 225;
    }
    100% {
      stroke-dashoffset: 275;
    }
  }
}

@media screen and (max-height: 545px) {
  nav {
    height: 15vh;
    padding: 10px 0px;
    overflow-x: hidden;
  }
}

// for the small laptops and iPad's
@media screen and (max-width: 1024px) {
  .container {
    width: 700px;
  }
}

// for the mobile and tablets
@media screen and (max-width: 768px) {
  * {
    cursor: default !important;
  }

  .container {
    width: 95%;
  }

  // the nav bar
  nav {
    .bars {
      display: block;
      z-index: 11;
      .line {
        width: 40px;
        height: 2px;
        background: #fff;
        margin: 5px 0px;
        transition: 0.3s;
      }
    }

    .navLinks {
      @include flex(center, center, column);
      position: fixed;
      top: 0;
      right: 0;
      height: 100vh;
      width: 100vw;
      background: $bgSecondary;
      transform: translate(-100%);
      transition: 0.3s ease;
      li {
        margin: 10px 0px;
      }
    }

    .nav-active {
      transform: translate(0) !important;
    }
    .toggle .line1 {
      transform: rotate(-45deg) translate(-5px, 6px);
    }
    .toggle .line2 {
      opacity: 0;
    }
    .toggle .line3 {
      transform: rotate(45deg) translate(-5px, -6px);
    }
  }
}
